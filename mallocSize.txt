#include <stdio.h>
#include <stdlib.h>
#define SQ(x) ((x)*(x))

int main()
{
    int size;
    printf("Gimme a size: \n");
    scanf(" %d", &size);
    
    int *arr = malloc(sizeof(int)*size);
    printf("%d, ", sizeof(arr) / sizeof(arr[0])); //CAN'T FIND SIZE OF DYNAM ALLOC ARRAY
    
    int arr2[size];
    printf("%d \n", sizeof(arr2) / sizeof(arr2[0])); //CORRECT SIZE
    
    // int intarray[4] = {1, 2, 3, 4};         //4 bytes
    // int *iptr = intarray;
    // printf("int: %d\n", *iptr);
    // iptr++;
    // printf("int: %d\n", *iptr);
    
    // double doublearray[4] = {144345566554.555, 2.7, 3.9, 4.1};         //4 bytes
    // double *dptr = doublearray;
    // printf("double: %lf\n", *dptr);
    // dptr++;
    // printf("double: %lf\n", *dptr);
    
    // char chararray[8] = {'f', 'a', 'c', 'e',' ','o','f','c'};         //4 bytes
    // char *cptr = chararray;
    // printf("double: %c\n", *cptr);
    // cptr+=3;
    // printf("double: %c\n", *cptr);
    
    // int num = 5;
    // int *varptr = num;
    // int *addrptr;
    // addrptr = &num;
    // printf("FIRST:  num: %d\t varpointer: %d\t addresspointer: %d\t\n", num, varptr, *addrptr);
    // num++;    //6
    // printf("VARIABLE:  num: %d\t varpointer: %d\t addresspointer: %d\t\n", num, varptr, *addrptr);
    // varptr++;       //7
    // printf("VARIABLE POINTER:  num: %d\t varpointer: %d\t addresspointer: %d\t\n", num, varptr, *addrptr);
    // ++*addrptr;     //8
    // printf("VARIABLE ADDRESS:  num: %d\t varpointer: %d\t addresspointer: %d\t\n", num, varptr, *addrptr);

    // int r = 0; 
    // int ans1 = SQ(++r);      //r = 1, call SQ(x) where r = 1 * r = 2
    // r = 0;
    // int ans2 = SQ(r++);     //r = 0, call SQ(x) where r = 0 * r = 1 = 0
    // r = 0;
    // int pre_ans = ((++r)*(++r));        //r = 0, in brackets 1:(r = 1) 2:(r = 2) -> updated -> 1:(r = 2) 2:(r = 2)
    // printf("\n%d\t%d\t%d\n", ans1, ans2, pre_ans);      
    // int array[5][5] = {{0,1,2,3,4},{5,6,7,8,9},{10,11,12,13,14},{15,16,17,18,19},{20,21,22,23,24}};
    // int i = 1;
    // int j = 0;
    // int add = 5*i+j;
    // int *ptr1 = &array[0]+add;
    // int *ptr2 = &array[0][0]+add;
    // printf("for &array[0]+%i:  %d\n", add, *ptr1);
    // printf("for &array[0][0]+%i:  %d\n", add, *ptr2);
    // printf("%d\n",'a');
    return 0;
}

